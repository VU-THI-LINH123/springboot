{"ast":null,"code":"import { columnMenuFilterEqOperator, columnMenuFilterNotEqOperator, columnMenuFilterIsNullOperator, columnMenuFilterIsNotNullOperator, columnMenuFilterIsEmptyOperator, columnMenuFilterIsNotEmptyOperator, columnMenuFilterStartsWithOperator, columnMenuFilterContainsOperator, columnMenuFilterNotContainsOperator, columnMenuFilterEndsWithOperator, columnMenuFilterGteOperator, columnMenuFilterGtOperator, columnMenuFilterLteOperator, columnMenuFilterLtOperator, columnMenuFilterAfterOrEqualOperator, columnMenuFilterAfterOperator, columnMenuFilterBeforeOperator, columnMenuFilterBeforeOrEqualOperator, columnMenuFilterIsTrue } from '../messages';\nvar textOperators = [{\n  text: columnMenuFilterContainsOperator,\n  operator: 'contains'\n}, {\n  text: columnMenuFilterNotContainsOperator,\n  operator: 'doesnotcontain'\n}, {\n  text: columnMenuFilterEqOperator,\n  operator: 'eq'\n}, {\n  text: columnMenuFilterNotEqOperator,\n  operator: 'neq'\n}, {\n  text: columnMenuFilterStartsWithOperator,\n  operator: 'startswith'\n}, {\n  text: columnMenuFilterEndsWithOperator,\n  operator: 'endswith'\n}, {\n  text: columnMenuFilterIsNullOperator,\n  operator: 'isnull'\n}, {\n  text: columnMenuFilterIsNotNullOperator,\n  operator: 'isnotnull'\n}, {\n  text: columnMenuFilterIsEmptyOperator,\n  operator: 'isempty'\n}, {\n  text: columnMenuFilterIsNotEmptyOperator,\n  operator: 'isnotempty'\n}];\nvar numericOperators = [{\n  text: columnMenuFilterEqOperator,\n  operator: 'eq'\n}, {\n  text: columnMenuFilterNotEqOperator,\n  operator: 'neq'\n}, {\n  text: columnMenuFilterGteOperator,\n  operator: 'gte'\n}, {\n  text: columnMenuFilterGtOperator,\n  operator: 'gt'\n}, {\n  text: columnMenuFilterLteOperator,\n  operator: 'lte'\n}, {\n  text: columnMenuFilterLtOperator,\n  operator: 'lt'\n}, {\n  text: columnMenuFilterIsNullOperator,\n  operator: 'isnull'\n}, {\n  text: columnMenuFilterIsNotNullOperator,\n  operator: 'isnotnull'\n}];\nvar dateOperators = [{\n  text: columnMenuFilterEqOperator,\n  operator: 'eq'\n}, {\n  text: columnMenuFilterNotEqOperator,\n  operator: 'neq'\n}, {\n  text: columnMenuFilterAfterOrEqualOperator,\n  operator: 'gte'\n}, {\n  text: columnMenuFilterAfterOperator,\n  operator: 'gt'\n}, {\n  text: columnMenuFilterBeforeOperator,\n  operator: 'lt'\n}, {\n  text: columnMenuFilterBeforeOrEqualOperator,\n  operator: 'lte'\n}, {\n  text: columnMenuFilterIsNullOperator,\n  operator: 'isnull'\n}, {\n  text: columnMenuFilterIsNotNullOperator,\n  operator: 'isnotnull'\n}];\nvar booleanOperators = [{\n  text: columnMenuFilterIsTrue,\n  operator: ''\n}];\n/**\n * Represents the operators for the ColumnMenuTextFilter, ColumnMenuNumericFilter,\n * ColumnMenuDateFilter and ColumnMenuBooleanFilter components.\n *\n * The text field of each operator object will be resolved according to the\n * [localization messages]({% slug globalization_datatools %}#toc-messages).\n */\n\nvar ColumnMenuOperators =\n/** @class */\nfunction () {\n  function ColumnMenuOperators() {}\n\n  Object.defineProperty(ColumnMenuOperators, \"text\", {\n    /**\n     * An array containing the operators for the ColumnMenuTextFilter component.\n     *\n     * The operators are:\n     *\n     * - { text: 'columnMenu.filterContainsOperator', operator: 'contains' }\n     * - { text: 'columnMenu.filterNotContainsOperator', operator: 'doesnotcontain' }\n     * - { text: 'columnMenu.filterEqOperator', operator: 'eq' }\n     * - { text: 'columnMenu.filterNotEqOperator', operator: 'neq' }\n     * - { text: 'columnMenu.filterStartsWithOperator', operator: 'startswith' }\n     * - { text: 'columnMenu.filterEndsWithOperator', operator: 'endswith' }\n     * - { text: 'columnMenu.filterIsNullOperator', operator: 'isnull' }\n     * - { text: 'columnMenu.filterIsNotNullOperator', operator: 'isnotnull' }\n     * - { text: 'columnMenu.filterIsEmptyOperator', operator: 'isempty' }\n     * - { text: 'columnMenu.filterIsNotEmptyOperator', operator: 'isnotempty' }\n     */\n    get: function get() {\n      return textOperators.slice();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ColumnMenuOperators, \"numeric\", {\n    /**\n     * An array containing the operators for the ColumnMenuNumericFilter component.\n     *\n     * The operators are:\n     *\n     * - { text: 'columnMenu.filterEqOperator', operator: 'eq' }\n     * - { text: 'columnMenu.filterNotEqOperator', operator: 'neq' }\n     * - { text: 'columnMenu.filterGteOperator', operator: 'gte' }\n     * - { text: 'columnMenu.filterGtOperator', operator: 'gt' }\n     * - { text: 'columnMenu.filterLteOperator', operator: 'lte' }\n     * - { text: 'columnMenu.filterLtOperator', operator: 'lt' }\n     * - { text: 'columnMenu.filterIsNullOperator', operator: 'isnull' }\n     * - { text: 'columnMenu.filterIsNotNullOperator', operator: 'isnotnull' }\n     */\n    get: function get() {\n      return numericOperators.slice();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ColumnMenuOperators, \"date\", {\n    /**\n     * An array containing the operators for the ColumnMenuDateFilter component.\n     *\n     * The operators are:\n     *\n     * - { text: 'columnMenu.filterEqOperator', operator: 'eq' }\n     * - { text: 'columnMenu.filterNotEqOperator', operator: 'neq' }\n     * - { text: 'columnMenu.filterAfterOrEqualOperator', operator: 'gte' }\n     * - { text: 'columnMenu.filterAfterOperator', operator: 'gt' }\n     * - { text: 'columnMenu.filterBeforeOperator', operator: 'lt' }\n     * - { text: 'columnMenu.filterBeforeOrEqualOperator', operator: 'lte' }\n     * - { text: 'columnMenu.filterIsNullOperator', operator: 'isnull' }\n     * - { text: 'columnMenu.filterIsNotNullOperator', operator: 'isnotnull' }\n     */\n    get: function get() {\n      return dateOperators.slice();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ColumnMenuOperators, \"boolean\", {\n    /**\n     * An array containing the operators for the ColumnMenuBooleanFilter component.\n     *\n     * The operators are:\n     *\n     * - { text: 'columnMenu.filterIsTrue', operator: '' }\n     */\n    get: function get() {\n      return booleanOperators.slice();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ColumnMenuOperators;\n}();\n\nexport { ColumnMenuOperators };","map":null,"metadata":{},"sourceType":"module"}