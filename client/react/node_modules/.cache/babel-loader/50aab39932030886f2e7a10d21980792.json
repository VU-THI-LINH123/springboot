{"ast":null,"code":"var PROPS_COUNT_LIMIT = 50000;\n/**\n * @hidden\n */\n// An alternative is to use array.sort() and\n// implement a binary search function.\n\nvar SortedPublicItemIds =\n/** @class */\nfunction () {\n  function SortedPublicItemIds() {\n    this.objects = [];\n  }\n\n  SortedPublicItemIds.prototype.init = function (publicItemIds) {\n    var currentObj;\n\n    for (var i = 0; i < publicItemIds.length; i++) {\n      if (i % PROPS_COUNT_LIMIT === 0) {\n        currentObj = {};\n        this.objects.push(currentObj);\n      }\n\n      currentObj[publicItemIds[i]] = true;\n    }\n  };\n\n  SortedPublicItemIds.prototype.hasId = function (publicItemId) {\n    return this.objects.some(function (obj) {\n      return obj[publicItemId];\n    });\n  };\n\n  return SortedPublicItemIds;\n}();\n\nexport default SortedPublicItemIds;","map":null,"metadata":{},"sourceType":"module"}