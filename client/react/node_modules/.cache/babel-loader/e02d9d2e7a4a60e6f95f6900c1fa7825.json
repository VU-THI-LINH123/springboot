{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { HeaderCell } from './HeaderCell';\nimport { normalize } from './SortSettings';\nimport { ColumnResizer } from '../drag/ColumnResizer';\nimport { ColumnDraggable } from '../drag/ColumnDraggable';\nimport { HeaderThElement } from './HeaderThElement';\nimport { Keys } from '@progress/kendo-react-common';\n/**\n * @hidden\n */\n\nvar sortSeqMap = {\n  true: {\n    'asc': 'desc',\n    'desc': '',\n    '': 'asc'\n  },\n  false: {\n    'asc': 'desc',\n    'desc': 'asc',\n    '': 'asc'\n  }\n};\n/**\n * @hidden\n */\n\nvar ariaSortMap = {\n  'none': 'none',\n  'asc': 'ascending',\n  'desc': 'descending'\n};\n/**\n * @hidden\n */\n\nvar HeaderRow =\n/** @class */\nfunction (_super) {\n  __extends(HeaderRow, _super);\n\n  function HeaderRow() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.cellClick = function (e, column) {\n      e.preventDefault();\n\n      if (!_this.props.sortChange) {\n        return;\n      }\n\n      var _a = normalize(_this.props.sortable || false, column.sortable || false),\n          allowUnsort = _a.allowUnsort,\n          mode = _a.mode;\n\n      var oldDescriptor = (_this.props.sort || []).filter(function (d) {\n        return d.field === column.field;\n      })[0];\n      var dir = sortSeqMap[allowUnsort][oldDescriptor && oldDescriptor.dir || ''];\n      var newDescriptor = mode === 'single' ? [] : (_this.props.sort || []).filter(function (d) {\n        return d.field !== column.field;\n      });\n\n      if (dir !== '' && column.field) {\n        newDescriptor.push({\n          field: column.field,\n          dir: dir\n        });\n      }\n\n      _this.props.sortChange(e, newDescriptor, column.field);\n    };\n\n    _this.cellKeyDown = function (event, column) {\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n\n      if (event.keyCode === Keys.enter) {\n        _this.cellClick(event, column);\n      }\n    };\n\n    _this.cells = function (rowIndexes) {\n      return rowIndexes.map(function (columnIndex, index) {\n        var column = _this.props.columns[columnIndex];\n        var columnResize = _this.props.columnResize;\n        var resizable = columnResize && columnResize.resizable && column.resizable;\n        var sortable = _this.props.sortable && column.sortable;\n        var sortIndex = _this.props.sort ? _this.props.sort.findIndex(function (s) {\n          return s.field === column.field;\n        }) : -1;\n        var sortDir = sortIndex >= 0 ? _this.props.sort[sortIndex].dir || 'none' : 'none';\n        var headerCellProps = {\n          field: column.field,\n          onClick: sortable && function (e) {\n            return _this.cellClick(e, column);\n          } || undefined,\n          selectionChange: _this.props.selectionChange,\n          title: column.title,\n          selectionValue: column.headerSelectionValue,\n          render: _this.props.cellRender,\n          children: _this.sortIcon(sortIndex)\n        };\n\n        var className = (column.kFirst ? 'k-first ' : '') + _this.cellClass(column.field, column.headerClassName, column.locked);\n\n        var style = column.locked !== undefined ? {\n          left: column.left,\n          right: column.right,\n          borderRightWidth: column.rightBorder ? '1px' : ''\n        } : {};\n        var ColumnMenu = column.columnMenu || _this.props.columnMenu;\n        return React.createElement(HeaderThElement, {\n          ariaSort: sortable ? ariaSortMap[sortDir] : undefined,\n          key: index,\n          colSpan: column.colSpan,\n          rowSpan: column.rowSpan,\n          className: className,\n          style: style,\n          columnId: column.id,\n          navigatable: column.navigatable,\n          onKeyDown: sortable && function (e) {\n            return _this.cellKeyDown(e, column);\n          } || undefined\n        }, ColumnMenu && React.createElement(ColumnMenu, {\n          sort: _this.props.sort,\n          onSortChange: _this.props.sortChange,\n          filter: _this.props.columnMenuFilter,\n          onFilterChange: _this.props.columnMenuFilterChange,\n          field: column.field\n        }), column.headerCell && React.createElement(column.headerCell, __assign({}, headerCellProps)) || React.createElement(HeaderCell, __assign({}, headerCellProps)), resizable && columnResize && React.createElement(ColumnResizer, {\n          key: \"ColumnResizer\",\n          resize: function resize(e, element, end) {\n            return columnResize.dragHandler(e, column, element, end);\n          }\n        }));\n      });\n    };\n\n    return _this;\n  }\n\n  HeaderRow.prototype.cellClass = function (field, headerClassName, locked) {\n    var result = \"k-header\" + (locked ? ' k-grid-header-sticky' : '') + (headerClassName ? ' ' + headerClassName : '');\n\n    if (this.props.sort && this.props.sort.some(function (descriptor) {\n      return descriptor.field === field;\n    })) {\n      result += ' k-sorted';\n    }\n\n    return result;\n  };\n\n  HeaderRow.prototype.sortIcon = function (sortIndex) {\n    if (!this.props.sort) {\n      return null;\n    }\n\n    return sortIndex >= 0 && [React.createElement(\"span\", {\n      key: 1,\n      className: 'k-icon k-i-sort-' + this.props.sort[sortIndex].dir + '-sm'\n    }), this.props.sort.length > 1 && React.createElement(\"span\", {\n      key: 2,\n      className: \"k-sort-order\"\n    }, sortIndex + 1)];\n  };\n\n  HeaderRow.prototype.render = function () {\n    var _this = this;\n\n    return this.props.columnsMap.map(function (rowIndexes, i) {\n      return _this.props.pressHandler && React.createElement(ColumnDraggable, {\n        key: i,\n        pressHandler: _this.props.pressHandler,\n        dragHandler: _this.props.dragHandler,\n        releaseHandler: _this.props.releaseHandler\n      }, _this.cells(rowIndexes)) || React.createElement(\"tr\", null, _this.cells(rowIndexes));\n    });\n  };\n\n  return HeaderRow;\n}(React.Component);\n\nexport { HeaderRow };","map":null,"metadata":{},"sourceType":"module"}