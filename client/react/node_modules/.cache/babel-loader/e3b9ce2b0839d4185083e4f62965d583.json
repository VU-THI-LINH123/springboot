{"ast":null,"code":"/**\n * @hidden\n */\nexport var SELECTION_TYPE;\n\n(function (SELECTION_TYPE) {\n  SELECTION_TYPE[\"single\"] = \"single\";\n  SELECTION_TYPE[\"multiple\"] = \"multiple\";\n  SELECTION_TYPE[\"none\"] = \"none\";\n})(SELECTION_TYPE || (SELECTION_TYPE = {}));\n/**\n * @hidden\n */\n\n\nexport var SELECTION_ACTION;\n\n(function (SELECTION_ACTION) {\n  SELECTION_ACTION[\"toggle\"] = \"toggle\";\n  SELECTION_ACTION[\"remove\"] = \"remove\";\n})(SELECTION_ACTION || (SELECTION_ACTION = {}));\n/**\n * @hidden\n */\n\n\nexport var selectionReducer = function selectionReducer(state, action) {\n  switch (action.selection) {\n    case SELECTION_TYPE.single:\n      switch (action.type) {\n        case SELECTION_ACTION.toggle:\n          {\n            if (!Array.isArray(state) || state === null) {\n              return action.payload === state ? null : action.payload;\n            }\n\n            throw new Error('State cannot be an array in single selection');\n          }\n\n        case SELECTION_ACTION.remove:\n          {\n            return action.payload === state ? null : state;\n          }\n\n        default:\n          return state;\n      }\n\n    case SELECTION_TYPE.multiple:\n      switch (action.type) {\n        case SELECTION_ACTION.toggle:\n          {\n            if (Array.isArray(state)) {\n              return state.some(function (i) {\n                return i === action.payload;\n              }) ? state.filter(function (i) {\n                return i !== action.payload;\n              }) : state.concat([action.payload]);\n            }\n\n            if (state === null) {\n              return [action.payload];\n            }\n\n            throw new Error('State cannot be non-array in multiple selection');\n          }\n\n        case SELECTION_ACTION.remove:\n          {\n            if (Array.isArray(state)) {\n              return state.some(function (i) {\n                return i === action.payload;\n              }) ? state.filter(function (i) {\n                return i !== action.payload;\n              }) : state.concat([action.payload]);\n            }\n\n            return state;\n          }\n\n        default:\n          return state;\n      }\n\n    case SELECTION_TYPE.none:\n      return null;\n\n    default:\n      return state;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}