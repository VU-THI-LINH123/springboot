{"ast":null,"code":"import _objectSpread from \"D:\\\\hihi2\\\\client\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\hihi2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\Employee1\\\\Employee1EditDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { IconButton, Dialog, Button, Icon, Grid, TextField, DialogActions } from \"@material-ui/core\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { addNewEmploeyee, updateEmployee, nameWasUsed, getAllDepartmentTest } from \"./Employee1Service\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\ntoast.configure();\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  })));\n}\n\nclass Employee1EditDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listDepartmentTest: [],\n      name: \"\",\n      code: \"\",\n      totalElements: 0,\n      rowsPerPage: 25,\n      page: 0\n    };\n\n    this.handleChange = (event, source) => {\n      event.persist();\n\n      if (source === \"switch\") {\n        this.setState({\n          isActive: event.target.checked\n        });\n        return;\n      }\n\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = () => {\n      let t = this.props.t;\n      let _this$state = this.state,\n          id = _this$state.id,\n          code = _this$state.code,\n          name = _this$state.name;\n      this.setState({\n        disabled: true\n      });\n      this.props.handleOKEditClose();\n      console.log(this.state);\n\n      if (id) {\n        updateEmployee(_objectSpread({}, this.state)).then(() => {\n          this.props.handleClose();\n        });\n      } else {\n        addNewEmploeyee(_objectSpread({}, this.state)).then(() => {\n          this.props.handleClose();\n        });\n      }\n    };\n\n    this.selectListDepartmentTest = departmentTestListSelected => {\n      let listDepartmentTest = [];\n      listDepartmentTest.push(departmentTestListSelected);\n      this.setState({\n        listDepartmentTest\n      });\n    };\n\n    this.updatePageData = () => {\n      getAllEmployees().then(({\n        data\n      }) => this.setState({\n        listDepartmentTest: [...data]\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.updatePageData();\n  }\n\n  render() {\n    let _this$state2 = this.state,\n        id = _this$state2.id,\n        code = _this$state2.code,\n        name = _this$state2.name,\n        disabled = _this$state2.disabled,\n        listDepartmentTest = _this$state2.listDepartmentTest;\n    const top100Films = [{\n      title: 'The Shawshank Redemption',\n      year: 1994\n    }, {\n      title: 'The Godfather',\n      year: 1972\n    }, {\n      title: 'The Godfather: Part II',\n      year: 1974\n    }, {\n      title: 'The Dark Knight',\n      year: 2008\n    }, {\n      title: '12 Angry Men',\n      year: 1957\n    }, {\n      title: \"Schindler's List\",\n      year: 1993\n    }, {\n      title: 'Pulp Fiction',\n      year: 1994\n    }, {\n      title: 'The Lord of the Rings: The Return of the King',\n      year: 2003\n    }, {\n      title: 'The Good, the Bad and the Ugly',\n      year: 1966\n    }, {\n      title: 'Fight Club',\n      year: 1999\n    }, {\n      title: 'The Lord of the Rings: The Fellowship of the Ring',\n      year: 2001\n    }, {\n      title: 'Star Wars: Episode V - The Empire Strikes Back',\n      year: 1980\n    }, {\n      title: 'Forrest Gump',\n      year: 1994\n    }, {\n      title: 'Inception',\n      year: 2010\n    }, {\n      title: 'The Lord of the Rings: The Two Towers',\n      year: 2002\n    }, {\n      title: \"One Flew Over the Cuckoo's Nest\",\n      year: 1975\n    }, {\n      title: 'Goodfellas',\n      year: 1990\n    }, {\n      title: 'The Matrix',\n      year: 1999\n    }, {\n      title: 'Seven Samurai',\n      year: 1954\n    }, {\n      title: 'Star Wars: Episode IV - A New Hope',\n      year: 1977\n    }, {\n      title: 'City of God',\n      year: 2002\n    }, {\n      title: 'Se7en',\n      year: 1995\n    }, {\n      title: 'The Silence of the Lambs',\n      year: 1991\n    }, {\n      title: \"It's a Wonderful Life\",\n      year: 1946\n    }, {\n      title: 'Life Is Beautiful',\n      year: 1997\n    }, {\n      title: 'The Usual Suspects',\n      year: 1995\n    }, {\n      title: 'Léon: The Professional',\n      year: 1994\n    }, {\n      title: 'Spirited Away',\n      year: 2001\n    }, {\n      title: 'Saving Private Ryan',\n      year: 1998\n    }, {\n      title: 'Once Upon a Time in the West',\n      year: 1968\n    }, {\n      title: 'American History X',\n      year: 1998\n    }, {\n      title: 'Interstellar',\n      year: 2014\n    }, {\n      title: 'Casablanca',\n      year: 1942\n    }, {\n      title: 'City Lights',\n      year: 1931\n    }, {\n      title: 'Psycho',\n      year: 1960\n    }, {\n      title: 'The Green Mile',\n      year: 1999\n    }, {\n      title: 'The Intouchables',\n      year: 2011\n    }, {\n      title: 'Modern Times',\n      year: 1936\n    }, {\n      title: 'Raiders of the Lost Ark',\n      year: 1981\n    }, {\n      title: 'Rear Window',\n      year: 1954\n    }, {\n      title: 'The Pianist',\n      year: 2002\n    }, {\n      title: 'The Departed',\n      year: 2006\n    }, {\n      title: 'Terminator 2: Judgment Day',\n      year: 1991\n    }, {\n      title: 'Back to the Future',\n      year: 1985\n    }, {\n      title: 'Whiplash',\n      year: 2014\n    }, {\n      title: 'Gladiator',\n      year: 2000\n    }, {\n      title: 'Memento',\n      year: 2000\n    }, {\n      title: 'The Prestige',\n      year: 2006\n    }, {\n      title: 'The Lion King',\n      year: 1994\n    }, {\n      title: 'Apocalypse Now',\n      year: 1979\n    }, {\n      title: 'Alien',\n      year: 1979\n    }, {\n      title: 'Sunset Boulevard',\n      year: 1950\n    }, {\n      title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n      year: 1964\n    }, {\n      title: 'The Great Dictator',\n      year: 1940\n    }, {\n      title: 'Cinema Paradiso',\n      year: 1988\n    }, {\n      title: 'The Lives of Others',\n      year: 2006\n    }, {\n      title: 'Grave of the Fireflies',\n      year: 1988\n    }, {\n      title: 'Paths of Glory',\n      year: 1957\n    }, {\n      title: 'Django Unchained',\n      year: 2012\n    }, {\n      title: 'The Shining',\n      year: 1980\n    }, {\n      title: 'WALL·E',\n      year: 2008\n    }, {\n      title: 'American Beauty',\n      year: 1999\n    }, {\n      title: 'The Dark Knight Rises',\n      year: 2012\n    }, {\n      title: 'Princess Mononoke',\n      year: 1997\n    }, {\n      title: 'Aliens',\n      year: 1986\n    }, {\n      title: 'Oldboy',\n      year: 2003\n    }, {\n      title: 'Once Upon a Time in America',\n      year: 1984\n    }, {\n      title: 'Witness for the Prosecution',\n      year: 1957\n    }, {\n      title: 'Das Boot',\n      year: 1981\n    }, {\n      title: 'Citizen Kane',\n      year: 1941\n    }, {\n      title: 'North by Northwest',\n      year: 1959\n    }, {\n      title: 'Vertigo',\n      year: 1958\n    }, {\n      title: 'Star Wars: Episode VI - Return of the Jedi',\n      year: 1983\n    }, {\n      title: 'Reservoir Dogs',\n      year: 1992\n    }, {\n      title: 'Braveheart',\n      year: 1995\n    }, {\n      title: 'M',\n      year: 1931\n    }, {\n      title: 'Requiem for a Dream',\n      year: 2000\n    }, {\n      title: 'Amélie',\n      year: 2001\n    }, {\n      title: 'A Clockwork Orange',\n      year: 1971\n    }, {\n      title: 'Like Stars on Earth',\n      year: 2007\n    }, {\n      title: 'Taxi Driver',\n      year: 1976\n    }, {\n      title: 'Lawrence of Arabia',\n      year: 1962\n    }, {\n      title: 'Double Indemnity',\n      year: 1944\n    }, {\n      title: 'Eternal Sunshine of the Spotless Mind',\n      year: 2004\n    }, {\n      title: 'Amadeus',\n      year: 1984\n    }, {\n      title: 'To Kill a Mockingbird',\n      year: 1962\n    }, {\n      title: 'Toy Story 3',\n      year: 2010\n    }, {\n      title: 'Logan',\n      year: 2017\n    }, {\n      title: 'Full Metal Jacket',\n      year: 1987\n    }, {\n      title: 'Dangal',\n      year: 2016\n    }, {\n      title: 'The Sting',\n      year: 1973\n    }, {\n      title: '2001: A Space Odyssey',\n      year: 1968\n    }, {\n      title: \"Singin' in the Rain\",\n      year: 1952\n    }, {\n      title: 'Toy Story',\n      year: 1995\n    }, {\n      title: 'Bicycle Thieves',\n      year: 1948\n    }, {\n      title: 'The Kid',\n      year: 1921\n    }, {\n      title: 'Inglourious Basterds',\n      year: 2009\n    }, {\n      title: 'Snatch',\n      year: 2000\n    }, {\n      title: '3 Idiots',\n      year: 2009\n    }, {\n      title: 'Monty Python and the Holy Grail',\n      year: 1975\n    }];\n    let _this$props = this.props,\n        open = _this$props.open,\n        t = _this$props.t;\n    return /*#__PURE__*/React.createElement(Dialog, {\n      open: open,\n      PaperComponent: PaperComponent,\n      maxWidth: \"sm\",\n      fullWidth: \"fullWidth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ValidatorForm, {\n      ref: \"form\",\n      onSubmit: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        cursor: \"move\"\n      },\n      id: \"draggable-dialog-title\",\n      className: \"flex flex-space-between flex-middle pl-16 pr-8 py-8 bg-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"m-0 text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, this.state.id ? t(\"employee.update\") : t(\"employee.add\")), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.props.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: \"text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }\n    }, \"clear\"))), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: \"mb-10\",\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 6,\n      sm: 6,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"w-100\",\n      label: t(\"employee.name\"),\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 6,\n      sm: 6,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      id: \"combo-box-demo\",\n      options: top100Films,\n      getOptionLabel: option => option.title,\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"department\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 40\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-space-between flex-middle mt-36\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      className: \"mr-36\",\n      onClick: () => this.props.handleClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 15\n      }\n    }, t(\"general.cancel\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 15\n      }\n    }, t(\"general.save\"))))));\n  }\n\n}\n\nexport default Employee1EditDialog;","map":{"version":3,"sources":["D:/hihi2/client/react/src/app/views/Employee1/Employee1EditDialog.jsx"],"names":["React","Component","IconButton","Dialog","Button","Icon","Grid","TextField","DialogActions","toast","Autocomplete","ValidatorForm","TextValidator","addNewEmploeyee","updateEmployee","nameWasUsed","getAllDepartmentTest","DialogContent","Draggable","Paper","configure","PaperComponent","props","Employee1EditDialog","state","listDepartmentTest","name","code","totalElements","rowsPerPage","page","handleChange","event","source","persist","setState","isActive","target","checked","value","handleFormSubmit","t","id","disabled","handleOKEditClose","console","log","then","handleClose","selectListDepartmentTest","departmentTestListSelected","push","updatePageData","getAllEmployees","data","componentDidMount","render","top100Films","title","year","open","cursor","option","params"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  IconButton,\r\n  Dialog,\r\n  Button,\r\n  Icon,\r\n  Grid,\r\n  TextField,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport {\r\n  addNewEmploeyee,\r\n  updateEmployee,\r\n  nameWasUsed,\r\n  getAllDepartmentTest,\r\n} from \"./Employee1Service\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\ntoast.configure();\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nclass Employee1EditDialog extends Component {\r\n  state = {\r\n    listDepartmentTest: [],\r\n    name: \"\",\r\n    code: \"\",\r\n    totalElements: 0,\r\n    rowsPerPage: 25,\r\n    page: 0,\r\n  };\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    if (source === \"switch\") {\r\n      this.setState({ isActive: event.target.checked });\r\n      return;\r\n    }\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = () => {\r\n    let { t } = this.props;\r\n    let { id, code, name } = this.state;\r\n    this.setState({ disabled: true });\r\n    this.props.handleOKEditClose();\r\n    console.log(this.state);\r\n    if (id) {\r\n      updateEmployee({\r\n        ...this.state\r\n      }).then(() => {\r\n        this.props.handleClose();\r\n      });\r\n    } else {\r\n      addNewEmploeyee({\r\n        ...this.state\r\n      }).then(() => {\r\n        this.props.handleClose();\r\n      });\r\n    }\r\n  };\r\n\r\n  selectListDepartmentTest = (departmentTestListSelected) => {\r\n    let listDepartmentTest = [];\r\n    listDepartmentTest.push(departmentTestListSelected);\r\n    this.setState({ listDepartmentTest });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updatePageData();\r\n  }\r\n\r\n  updatePageData = () => {\r\n    getAllEmployees().then(({ data }) => this.setState({ listDepartmentTest: [...data] }));\r\n  };\r\n\r\n  render() {\r\n    let { id, code, name, disabled, listDepartmentTest } = this.state;\r\n    const top100Films = [\r\n      { title: 'The Shawshank Redemption', year: 1994 },\r\n      { title: 'The Godfather', year: 1972 },\r\n      { title: 'The Godfather: Part II', year: 1974 },\r\n      { title: 'The Dark Knight', year: 2008 },\r\n      { title: '12 Angry Men', year: 1957 },\r\n      { title: \"Schindler's List\", year: 1993 },\r\n      { title: 'Pulp Fiction', year: 1994 },\r\n      { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\r\n      { title: 'The Good, the Bad and the Ugly', year: 1966 },\r\n      { title: 'Fight Club', year: 1999 },\r\n      { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\r\n      { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\r\n      { title: 'Forrest Gump', year: 1994 },\r\n      { title: 'Inception', year: 2010 },\r\n      { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\r\n      { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n      { title: 'Goodfellas', year: 1990 },\r\n      { title: 'The Matrix', year: 1999 },\r\n      { title: 'Seven Samurai', year: 1954 },\r\n      { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\r\n      { title: 'City of God', year: 2002 },\r\n      { title: 'Se7en', year: 1995 },\r\n      { title: 'The Silence of the Lambs', year: 1991 },\r\n      { title: \"It's a Wonderful Life\", year: 1946 },\r\n      { title: 'Life Is Beautiful', year: 1997 },\r\n      { title: 'The Usual Suspects', year: 1995 },\r\n      { title: 'Léon: The Professional', year: 1994 },\r\n      { title: 'Spirited Away', year: 2001 },\r\n      { title: 'Saving Private Ryan', year: 1998 },\r\n      { title: 'Once Upon a Time in the West', year: 1968 },\r\n      { title: 'American History X', year: 1998 },\r\n      { title: 'Interstellar', year: 2014 },\r\n      { title: 'Casablanca', year: 1942 },\r\n      { title: 'City Lights', year: 1931 },\r\n      { title: 'Psycho', year: 1960 },\r\n      { title: 'The Green Mile', year: 1999 },\r\n      { title: 'The Intouchables', year: 2011 },\r\n      { title: 'Modern Times', year: 1936 },\r\n      { title: 'Raiders of the Lost Ark', year: 1981 },\r\n      { title: 'Rear Window', year: 1954 },\r\n      { title: 'The Pianist', year: 2002 },\r\n      { title: 'The Departed', year: 2006 },\r\n      { title: 'Terminator 2: Judgment Day', year: 1991 },\r\n      { title: 'Back to the Future', year: 1985 },\r\n      { title: 'Whiplash', year: 2014 },\r\n      { title: 'Gladiator', year: 2000 },\r\n      { title: 'Memento', year: 2000 },\r\n      { title: 'The Prestige', year: 2006 },\r\n      { title: 'The Lion King', year: 1994 },\r\n      { title: 'Apocalypse Now', year: 1979 },\r\n      { title: 'Alien', year: 1979 },\r\n      { title: 'Sunset Boulevard', year: 1950 },\r\n      { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\r\n      { title: 'The Great Dictator', year: 1940 },\r\n      { title: 'Cinema Paradiso', year: 1988 },\r\n      { title: 'The Lives of Others', year: 2006 },\r\n      { title: 'Grave of the Fireflies', year: 1988 },\r\n      { title: 'Paths of Glory', year: 1957 },\r\n      { title: 'Django Unchained', year: 2012 },\r\n      { title: 'The Shining', year: 1980 },\r\n      { title: 'WALL·E', year: 2008 },\r\n      { title: 'American Beauty', year: 1999 },\r\n      { title: 'The Dark Knight Rises', year: 2012 },\r\n      { title: 'Princess Mononoke', year: 1997 },\r\n      { title: 'Aliens', year: 1986 },\r\n      { title: 'Oldboy', year: 2003 },\r\n      { title: 'Once Upon a Time in America', year: 1984 },\r\n      { title: 'Witness for the Prosecution', year: 1957 },\r\n      { title: 'Das Boot', year: 1981 },\r\n      { title: 'Citizen Kane', year: 1941 },\r\n      { title: 'North by Northwest', year: 1959 },\r\n      { title: 'Vertigo', year: 1958 },\r\n      { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\r\n      { title: 'Reservoir Dogs', year: 1992 },\r\n      { title: 'Braveheart', year: 1995 },\r\n      { title: 'M', year: 1931 },\r\n      { title: 'Requiem for a Dream', year: 2000 },\r\n      { title: 'Amélie', year: 2001 },\r\n      { title: 'A Clockwork Orange', year: 1971 },\r\n      { title: 'Like Stars on Earth', year: 2007 },\r\n      { title: 'Taxi Driver', year: 1976 },\r\n      { title: 'Lawrence of Arabia', year: 1962 },\r\n      { title: 'Double Indemnity', year: 1944 },\r\n      { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\r\n      { title: 'Amadeus', year: 1984 },\r\n      { title: 'To Kill a Mockingbird', year: 1962 },\r\n      { title: 'Toy Story 3', year: 2010 },\r\n      { title: 'Logan', year: 2017 },\r\n      { title: 'Full Metal Jacket', year: 1987 },\r\n      { title: 'Dangal', year: 2016 },\r\n      { title: 'The Sting', year: 1973 },\r\n      { title: '2001: A Space Odyssey', year: 1968 },\r\n      { title: \"Singin' in the Rain\", year: 1952 },\r\n      { title: 'Toy Story', year: 1995 },\r\n      { title: 'Bicycle Thieves', year: 1948 },\r\n      { title: 'The Kid', year: 1921 },\r\n      { title: 'Inglourious Basterds', year: 2009 },\r\n      { title: 'Snatch', year: 2000 },\r\n      { title: '3 Idiots', year: 2009 },\r\n      { title: 'Monty Python and the Holy Grail', year: 1975 },\r\n    ];\r\n    let { open, t } = this.props;\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        PaperComponent={PaperComponent}\r\n        maxWidth=\"sm\"\r\n        fullWidth=\"fullWidth\"\r\n      >\r\n        <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n          <div\r\n            style={{ cursor: \"move\" }}\r\n            id=\"draggable-dialog-title\"\r\n            className=\"flex flex-space-between flex-middle pl-16 pr-8 py-8 bg-primary\"\r\n          >\r\n            <h4 className=\"m-0 text-white\">\r\n              {this.state.id\r\n                ? t(\"employee.update\")\r\n                : t(\"employee.add\")}\r\n            </h4>\r\n            <IconButton onClick={this.props.handleClose}>\r\n              <Icon className=\"text-white\">clear</Icon>\r\n            </IconButton>\r\n          </div>\r\n          <DialogContent>\r\n            <Grid className=\"mb-10\" container spacing={3}>\r\n              <Grid item md={6} sm={6} xs={6}>\r\n                <TextValidator\r\n                  className=\"w-100\"\r\n                  label={t(\"employee.name\")}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n   \r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={6}>\r\n             \r\n              <Autocomplete\r\n              id=\"combo-box-demo\"\r\n              options={top100Films}\r\n              getOptionLabel={(option) => option.title}\r\n            \r\n              renderInput={(params) => <TextField {...params} label=\"department\" />}\r\n             />\r\n               \r\n                \r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <div className=\"flex flex-space-between flex-middle mt-36\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className=\"mr-36\"\r\n                onClick={() => this.props.handleClose()}\r\n              >\r\n                {t(\"general.cancel\")}\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                disabled={disabled}\r\n              >\r\n                {t(\"general.save\")}\r\n              </Button>\r\n            </div>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Employee1EditDialog;\r\n"]},"metadata":{},"sourceType":"module"}