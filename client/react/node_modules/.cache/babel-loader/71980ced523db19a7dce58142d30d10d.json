{"ast":null,"code":"import _objectSpread from \"D:\\\\hihi2\\\\client\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\hihi2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\department\\\\DepartmentEditorDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { IconButton, Dialog, Button, Icon, Grid, DialogActions } from \"@material-ui/core\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { addNewEmploeyee, updateEmployee, nameWasUsed, getAllDepartmentTest } from \"./DepartmentService\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\ntoast.configure();\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  })));\n}\n\nclass DepartmentEditorDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listDepartmentTest: [],\n      name: \"\",\n      description: \"\",\n      totalElements: 0,\n      rowsPerPage: 25,\n      page: 0\n    };\n\n    this.handleChange = (event, source) => {\n      event.persist();\n\n      if (source === \"switch\") {\n        this.setState({\n          isActive: event.target.checked\n        });\n        return;\n      }\n\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = () => {\n      let t = this.props.t;\n      let _this$state = this.state,\n          id = _this$state.id,\n          code = _this$state.code,\n          name = _this$state.name;\n      this.setState({\n        disabled: true\n      });\n      this.props.handleOKEditClose();\n      console.log(this.state);\n\n      if (id) {\n        updateEmployee(_objectSpread({}, this.state)).then(() => {\n          this.props.handleClose();\n        });\n      } else {\n        addNewEmploeyee(_objectSpread({}, this.state)).then(() => {\n          this.props.handleClose();\n        });\n      }\n    };\n\n    this.selectListDepartmentTest = departmentTestListSelected => {\n      let listDepartmentTest = [];\n      listDepartmentTest.push(departmentTestListSelected);\n      this.setState({\n        listDepartmentTest\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState(_objectSpread({}, this.props.item));\n    getAllDepartmentTest().then(({\n      data\n    }) => {\n      this.setState({\n        listDepartmentTest: data\n      });\n    }).catch(err => {\n      toast.warning(err + \"\");\n    });\n  }\n\n  render() {\n    let _this$state2 = this.state,\n        id = _this$state2.id,\n        name = _this$state2.name;\n    let _this$props = this.props,\n        open = _this$props.open,\n        t = _this$props.t;\n    return /*#__PURE__*/React.createElement(Dialog, {\n      open: open,\n      PaperComponent: PaperComponent,\n      maxWidth: \"sm\",\n      fullWidth: \"fullWidth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ValidatorForm, {\n      ref: \"form\",\n      onSubmit: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        cursor: \"move\"\n      },\n      id: \"draggable-dialog-title\",\n      className: \"flex flex-space-between flex-middle pl-16 pr-8 py-8 bg-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"m-0 text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, this.state.id ? t(\"employee.update\") : t(\"employee.add\")), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.props.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: \"text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, \"clear\"))), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: \"mb-10\",\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 6,\n      sm: 6,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"w-100 mb-10\",\n      label: t(\"employee.code\"),\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"code\",\n      value: code,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 18\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 6,\n      sm: 6,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"w-100\",\n      label: t(\"employee.phone\"),\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"phone\",\n      value: phone,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"w-100 mb-10\",\n      label: t(\"employee.age\"),\n      onChange: this.handleChange,\n      type: \"number\",\n      name: \"age\",\n      value: age,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"w-100\",\n      label: t(\"employee.departmentTestCode\"),\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"departmentTestCode\",\n      value: departmentTestCode,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-space-between flex-middle mt-36\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      className: \"mr-36\",\n      onClick: () => this.props.handleClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }, t(\"general.cancel\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, t(\"general.save\"))))));\n  }\n\n}\n\nexport default DepartmentEditorDialog;","map":{"version":3,"sources":["D:/hihi2/client/react/src/app/views/department/DepartmentEditorDialog.jsx"],"names":["React","Component","IconButton","Dialog","Button","Icon","Grid","DialogActions","toast","Autocomplete","ValidatorForm","TextValidator","addNewEmploeyee","updateEmployee","nameWasUsed","getAllDepartmentTest","DialogContent","Draggable","Paper","configure","PaperComponent","props","DepartmentEditorDialog","state","listDepartmentTest","name","description","totalElements","rowsPerPage","page","handleChange","event","source","persist","setState","isActive","target","checked","value","handleFormSubmit","t","id","code","disabled","handleOKEditClose","console","log","then","handleClose","selectListDepartmentTest","departmentTestListSelected","push","componentDidMount","item","data","catch","err","warning","render","open","cursor","phone","age","departmentTestCode"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  IconButton,\r\n  Dialog,\r\n  Button,\r\n  Icon,\r\n  Grid,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport {\r\n  addNewEmploeyee,\r\n  updateEmployee,\r\n  nameWasUsed,\r\n  getAllDepartmentTest,\r\n} from \"./DepartmentService\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\ntoast.configure();\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nclass DepartmentEditorDialog extends Component {\r\n  state = {\r\n    listDepartmentTest: [],\r\n    name: \"\",\r\n    description: \"\",\r\n    totalElements: 0,\r\n    rowsPerPage: 25,\r\n    page: 0,\r\n  };\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    if (source === \"switch\") {\r\n      this.setState({ isActive: event.target.checked });\r\n      return;\r\n    }\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = () => {\r\n    let { t } = this.props;\r\n    let { id, code, name } = this.state;\r\n    this.setState({ disabled: true });\r\n    this.props.handleOKEditClose();\r\n    console.log(this.state);\r\n    if (id) {\r\n      updateEmployee({\r\n        ...this.state\r\n      }).then(() => {\r\n        this.props.handleClose();\r\n      });\r\n    } else {\r\n      addNewEmploeyee({\r\n        ...this.state\r\n      }).then(() => {\r\n        this.props.handleClose();\r\n      });\r\n    }\r\n  };\r\n\r\n  selectListDepartmentTest = (departmentTestListSelected) => {\r\n    let listDepartmentTest = [];\r\n    listDepartmentTest.push(departmentTestListSelected);\r\n    this.setState({ listDepartmentTest });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      ...this.props.item,\r\n    });\r\n    getAllDepartmentTest()\r\n      .then(({ data }) => {\r\n        this.setState({\r\n          listDepartmentTest: data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        toast.warning(err + \"\");\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let { id,  name } = this.state;\r\n    let { open, t } = this.props;\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        PaperComponent={PaperComponent}\r\n        maxWidth=\"sm\"\r\n        fullWidth=\"fullWidth\"\r\n      >\r\n        <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n          <div\r\n            style={{ cursor: \"move\" }}\r\n            id=\"draggable-dialog-title\"\r\n            className=\"flex flex-space-between flex-middle pl-16 pr-8 py-8 bg-primary\"\r\n          >\r\n            <h4 className=\"m-0 text-white\">\r\n              {this.state.id\r\n                ? t(\"employee.update\")\r\n                : t(\"employee.add\")}\r\n            </h4>\r\n            <IconButton onClick={this.props.handleClose}>\r\n              <Icon className=\"text-white\">clear</Icon>\r\n            </IconButton>\r\n          </div>\r\n          <DialogContent>\r\n            <Grid className=\"mb-10\" container spacing={3}>\r\n              <Grid item md={6} sm={6} xs={6}>\r\n             \r\n               \r\n                 <TextValidator\r\n                  className=\"w-100 mb-10\"\r\n                  label={t(\"employee.code\")}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"code\"\r\n                  value={code}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n               \r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={6}>\r\n                <TextValidator\r\n                  className=\"w-100\"\r\n                  label={t(\"employee.phone\")}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"phone\"\r\n                  value={phone}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"w-100 mb-10\"\r\n                  label={t(\"employee.age\")}\r\n                  onChange={this.handleChange}\r\n                  type=\"number\"\r\n                  name=\"age\"\r\n                  value={age}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"w-100\"\r\n                  label={t(\"employee.departmentTestCode\")}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"departmentTestCode\"\r\n                  value={departmentTestCode}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                /> \r\n                \r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <div className=\"flex flex-space-between flex-middle mt-36\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className=\"mr-36\"\r\n                onClick={() => this.props.handleClose()}\r\n              >\r\n                {t(\"general.cancel\")}\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                disabled={disabled}\r\n              >\r\n                {t(\"general.save\")}\r\n              </Button>\r\n            </div>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DepartmentEditorDialog;\r\n"]},"metadata":{},"sourceType":"module"}