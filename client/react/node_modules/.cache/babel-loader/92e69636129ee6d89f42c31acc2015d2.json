{"ast":null,"code":"import _objectSpread from \"D:\\\\hihi2\\\\client\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\hihi2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\Categories\\\\CategoriesDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { IconButton, Dialog, Button, Icon, Grid, DialogActions } from \"@material-ui/core\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { addNewData, updateData, codeWasUsed, nameWasUsed } from \"./CategoriesService\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\ntoast.configure();\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  })));\n}\n\nclass CategoriesDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      code: \"\",\n      description: \"\",\n      totalElements: 0,\n      rowsPerPage: 25,\n      page: 0\n    };\n\n    this.handleChange = (event, source) => {\n      event.persist();\n\n      if (source === \"switch\") {\n        this.setState({\n          isActive: event.target.checked\n        });\n        return;\n      }\n\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = () => {\n      let id = this.state.id;\n      let t = this.props.t;\n      let code = this.state.code;\n      let name = this.state.name;\n      let checkcode = {\n        id,\n        code\n      };\n      let checkname = {\n        id,\n        name\n      };\n      this.setState({\n        disabled: true\n      });\n      this.props.handleOKEditClose(); //Nếu trả về false là code chưa sử dụng có thể dùng\n\n      codeWasUsed(checkcode).then(result => {\n        if (result && result.data !== null && result.data === false) {\n          nameWasUsed(checkname).then(result => {\n            if (result && result.data !== null && result.data === false) {\n              if (!id) {\n                addNewData(_objectSpread({}, this.state)).then(() => {\n                  this.setState({\n                    loading: false\n                  });\n                  this.props.handleOKEditClose();\n                  var t = this.props.t;\n                  toast.success(t(\"general.success\"));\n                }).catch(err => {\n                  toast.warning(err + \"\");\n                });\n              } else {\n                updateData(_objectSpread({}, this.state)).then(() => {\n                  this.setState({\n                    loading: false\n                  });\n                  this.props.handleOKEditClose();\n                  var t = this.props.t;\n                  toast.success(t(\"general.success\"));\n                }).catch(err => {\n                  toast.warning(err + \"\");\n                });\n              }\n\n              this.props.handleClose();\n            } else {\n              toast.error(t(\"Category.name_in_used\"));\n            }\n          }).catch(err => {\n            toast.warning(err + \"\");\n          });\n        } else {\n          toast.error(t(\"Category.checkCode\"));\n          this.setState({\n            disabled: true\n          });\n        }\n      }).catch(err => {\n        toast.warning(err + \"\");\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.setState(_objectSpread({}, this.props.item));\n  }\n\n  render() {\n    let _this$state = this.state,\n        name = _this$state.name,\n        code = _this$state.code,\n        disabled = _this$state.disabled;\n    let _this$props = this.props,\n        open = _this$props.open,\n        t = _this$props.t;\n    return /*#__PURE__*/React.createElement(Dialog, {\n      open: open,\n      PaperComponent: PaperComponent,\n      maxWidth: \"sm\",\n      fullWidth: \"fullWidth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ValidatorForm, {\n      ref: \"form\",\n      onSubmit: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        cursor: \"move\"\n      },\n      id: \"draggable-dialog-title\",\n      className: \"flex flex-space-between flex-middle pl-16 pr-8 py-8 bg-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"m-0 text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, this.state.id ? t(\"Category.dialog.titleUpdate\") : t(\"Category.dialog.titleCreate\")), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.props.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      className: \"text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, \"clear\"))), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: \"mb-10\",\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 12,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"w-100 mb-10\",\n      label: t(\"Category.code\"),\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"code\",\n      value: code,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"w-100 mb-10\",\n      label: t(\"Category.code\"),\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"code\",\n      value: code,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"w-100 mb-10\",\n      label: t(\"Category.code\"),\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"code\",\n      value: code,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      className: \"w-100\",\n      label: t(\"Category.name\"),\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-space-between flex-middle mt-36\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      className: \"mr-36\",\n      onClick: () => this.props.handleClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }, t(\"general.cancel\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }, t(\"general.save\"))))));\n  }\n\n}\n\nexport default CategoriesDialog;","map":{"version":3,"sources":["D:/hihi2/client/react/src/app/views/Categories/CategoriesDialog.jsx"],"names":["React","Component","IconButton","Dialog","Button","Icon","Grid","DialogActions","toast","ValidatorForm","TextValidator","addNewData","updateData","codeWasUsed","nameWasUsed","DialogContent","Draggable","Paper","configure","PaperComponent","props","CategoriesDialog","state","name","code","description","totalElements","rowsPerPage","page","handleChange","event","source","persist","setState","isActive","target","checked","value","handleFormSubmit","id","t","checkcode","checkname","disabled","handleOKEditClose","then","result","data","loading","success","catch","err","warning","handleClose","error","componentWillMount","item","render","open","cursor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  IconButton,\r\n  Dialog,\r\n  Button,\r\n  Icon,\r\n  Grid,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport {\r\n  addNewData,\r\n  updateData,\r\n  codeWasUsed,\r\n  nameWasUsed,\r\n} from \"./CategoriesService\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\ntoast.configure();\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nclass CategoriesDialog extends Component {\r\n  state = {\r\n    name: \"\",\r\n    code: \"\",\r\n    description: \"\",\r\n    totalElements: 0,\r\n    rowsPerPage: 25,\r\n    page: 0,\r\n  };\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    if (source === \"switch\") {\r\n      this.setState({ isActive: event.target.checked });\r\n      return;\r\n    }\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = () => {\r\n    let { id } = this.state;\r\n    let { t } = this.props;\r\n    let { code } = this.state;\r\n    let { name } = this.state;\r\n    let checkcode = { id, code };\r\n    let checkname = { id, name };\r\n    this.setState({ disabled: true });\r\n    this.props.handleOKEditClose();\r\n    //Nếu trả về false là code chưa sử dụng có thể dùng\r\n    codeWasUsed(checkcode).then((result) => {\r\n      if (result && result.data !== null && result.data === false) {\r\n        nameWasUsed(checkname).then((result) => {\r\n          if (result && result.data !== null && result.data === false) {\r\n            if (!id) {\r\n              addNewData({\r\n                ...this.state,\r\n              }).then(() => {\r\n                this.setState({ loading: false });\r\n                this.props.handleOKEditClose();\r\n                var { t } = this.props;\r\n                toast.success(t(\"general.success\"));\r\n              }).catch((err) => {\r\n                toast.warning(err + \"\");\r\n              });\r\n            } else {\r\n              updateData({\r\n                ...this.state,\r\n              }).then(() => {\r\n                this.setState({ loading: false });\r\n                this.props.handleOKEditClose();\r\n                var { t } = this.props;\r\n                toast.success(t(\"general.success\"));\r\n              }).catch((err) => {\r\n                toast.warning(err + \"\");\r\n              });\r\n            }\r\n\r\n            this.props.handleClose();\r\n          } else {\r\n            toast.error(t(\"Category.name_in_used\"));\r\n          }\r\n        }).catch((err) => {\r\n          toast.warning(err + \"\");\r\n        });\r\n      } else {\r\n        toast.error(t(\"Category.checkCode\"));\r\n        this.setState({ disabled: true });\r\n      }\r\n    }).catch((err) => {\r\n      toast.warning(err + \"\");\r\n    });\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.setState({\r\n      ...this.props.item,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let { name, code, disabled } = this.state;\r\n    let { open, t } = this.props;\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        PaperComponent={PaperComponent}\r\n        maxWidth=\"sm\"\r\n        fullWidth=\"fullWidth\"\r\n      >\r\n        <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n          <div\r\n            style={{ cursor: \"move\" }}\r\n            id=\"draggable-dialog-title\"\r\n            className=\"flex flex-space-between flex-middle pl-16 pr-8 py-8 bg-primary\"\r\n          >\r\n            <h4 className=\"m-0 text-white\">\r\n              {this.state.id\r\n                ? t(\"Category.dialog.titleUpdate\")\r\n                : t(\"Category.dialog.titleCreate\")}\r\n            </h4>\r\n            <IconButton onClick={this.props.handleClose}>\r\n              <Icon className=\"text-white\">clear</Icon>\r\n            </IconButton>\r\n          </div>\r\n          <DialogContent>\r\n            <Grid className=\"mb-10\" container spacing={3}>\r\n              <Grid item md={12} sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-10\"\r\n                  label={t(\"Category.code\")}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"code\"\r\n                  value={code}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                 <TextValidator\r\n                  className=\"w-100 mb-10\"\r\n                  label={t(\"Category.code\")}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"code\"\r\n                  value={code}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                 <TextValidator\r\n                  className=\"w-100 mb-10\"\r\n                  label={t(\"Category.code\")}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"code\"\r\n                  value={code}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"w-100\"\r\n                  label={t(\"Category.name\")}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <div className=\"flex flex-space-between flex-middle mt-36\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className=\"mr-36\"\r\n                onClick={() => this.props.handleClose()}\r\n              >\r\n                {t(\"general.cancel\")}\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                disabled={disabled}\r\n              >\r\n                {t(\"general.save\")}\r\n              </Button>\r\n            </div>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoriesDialog;\r\n"]},"metadata":{},"sourceType":"module"}