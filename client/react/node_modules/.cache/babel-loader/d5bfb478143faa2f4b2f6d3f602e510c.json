{"ast":null,"code":"var _jsxFileName = \"D:\\\\hihi2\\\\client\\\\react\\\\src\\\\app\\\\views\\\\department\\\\DepartmentTable.jsx\";\nimport React, { Component } from \"react\";\nimport { IconButton, Table, TableHead, TableBody, TableRow, TableCell, Icon, TablePagination, Button, Card } from \"@material-ui/core\";\nimport { getAllEmployees, deleteUser } from \"./DepartmentService\";\nimport MemberEditorDialog from \"./MemberEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport shortid from \"shortid\";\n\nclass DepartmentTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rowsPerPage: 10,\n      page: 0,\n      userList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false\n    };\n\n    this.setPage = page => {\n      this.setState({\n        page\n      });\n    };\n\n    this.setRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    this.handleChangePage = (event, newPage) => {\n      this.setPage(newPage);\n    };\n\n    this.handleDialogClose = () => {\n      this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false\n      });\n      this.updatePageData();\n    };\n\n    this.handleDeleteUser = user => {\n      this.setState({\n        user,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    this.handleConfirmationResponse = () => {\n      deleteUser(this.state.user).then(() => {\n        this.handleDialogClose();\n      });\n    };\n\n    this.updatePageData = () => {\n      getAllEmployees().then(({\n        data\n      }) => this.setState({\n        userList: [...data]\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.updatePageData();\n  }\n\n  render() {\n    let _this$state = this.state,\n        rowsPerPage = _this$state.rowsPerPage,\n        page = _this$state.page,\n        userList = _this$state.userList,\n        shouldOpenConfirmationDialog = _this$state.shouldOpenConfirmationDialog,\n        shouldOpenEditorDialog = _this$state.shouldOpenEditorDialog;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-sm-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-sm-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      routeSegments: [{\n        name: \"Employee Table\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"mb-16\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.setState({\n        shouldOpenEditorDialog: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"Add New Member\"), /*#__PURE__*/React.createElement(Card, {\n      className: \"w-100 overflow-auto\",\n      elevation: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: \"crud-table\",\n      style: {\n        whiteSpace: \"pre\",\n        minWidth: \"750px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, \"Birthdate\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, \"Company\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, userList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((user, index) => /*#__PURE__*/React.createElement(TableRow, {\n      key: shortid.generate(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, user.firstName), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, user.lastName), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, user.birthDate), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, user.company), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, user.isActive ? /*#__PURE__*/React.createElement(\"small\", {\n      className: \"border-radius-4 bg-primary text-white px-8 py-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, \"active\") : /*#__PURE__*/React.createElement(\"small\", {\n      className: \"border-radius-4 bg-light-gray px-8 py-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, \"inactive\")), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0 border-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => this.setState({\n        uid: user.id,\n        shouldOpenEditorDialog: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => this.handleDeleteUser(user),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      color: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, \"delete\"))))))), /*#__PURE__*/React.createElement(TablePagination, {\n      className: \"px-16\",\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: userList.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      backIconButtonProps: {\n        \"aria-label\": \"Previous Page\"\n      },\n      nextIconButtonProps: {\n        \"aria-label\": \"Next Page\"\n      },\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.setRowsPerPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }), shouldOpenEditorDialog && /*#__PURE__*/React.createElement(MemberEditorDialog, {\n      handleClose: this.handleDialogClose,\n      open: shouldOpenEditorDialog,\n      uid: this.state.uid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }), shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n      open: shouldOpenConfirmationDialog,\n      onConfirmDialogClose: this.handleDialogClose,\n      onYesClick: this.handleConfirmationResponse,\n      text: \"Are you sure to delete?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default DepartmentTable;","map":{"version":3,"sources":["D:/hihi2/client/react/src/app/views/department/DepartmentTable.jsx"],"names":["React","Component","IconButton","Table","TableHead","TableBody","TableRow","TableCell","Icon","TablePagination","Button","Card","getAllEmployees","deleteUser","MemberEditorDialog","Breadcrumb","ConfirmationDialog","shortid","DepartmentTable","state","rowsPerPage","page","userList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","setPage","setState","setRowsPerPage","event","target","value","handleChangePage","newPage","handleDialogClose","updatePageData","handleDeleteUser","user","handleConfirmationResponse","then","data","componentDidMount","render","name","whiteSpace","minWidth","slice","map","index","generate","firstName","lastName","birthDate","company","isActive","uid","id","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  IconButton,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Icon,\r\n  TablePagination,\r\n  Button,\r\n  Card\r\n} from \"@material-ui/core\";\r\nimport { getAllEmployees, deleteUser } from \"./DepartmentService\";\r\nimport MemberEditorDialog from \"./MemberEditorDialog\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport shortid from \"shortid\";\r\n\r\nclass DepartmentTable extends Component {\r\n  state = {\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    userList: [],\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false\r\n  };\r\n\r\n  setPage = page => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  setRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false\r\n    });\r\n    this.updatePageData();\r\n  };\r\n\r\n  handleDeleteUser = user => {\r\n    this.setState({\r\n      user,\r\n      shouldOpenConfirmationDialog: true\r\n    });\r\n  };\r\n\r\n  handleConfirmationResponse = () => {\r\n    deleteUser(this.state.user).then(() => {\r\n      this.handleDialogClose();\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updatePageData();\r\n  }\r\n\r\n  updatePageData = () => {\r\n    getAllEmployees().then(({ data }) => this.setState({ userList: [...data] }));\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      rowsPerPage,\r\n      page,\r\n      userList,\r\n      shouldOpenConfirmationDialog,\r\n      shouldOpenEditorDialog\r\n    } = this.state;\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n        <div  className=\"mb-sm-30\">\r\n          <Breadcrumb routeSegments={[{ name: \"Employee Table\" }]} />\r\n        </div>\r\n\r\n        <Button\r\n          className=\"mb-16\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => this.setState({ shouldOpenEditorDialog: true })}\r\n        >\r\n          Add New Member\r\n        </Button>\r\n        <Card className=\"w-100 overflow-auto\" elevation={6}>\r\n          <Table className=\"crud-table\" style={{ whiteSpace: \"pre\", minWidth: \"750px\" }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>First Name</TableCell>\r\n                <TableCell>Last Name</TableCell>\r\n                <TableCell>Birthdate</TableCell>\r\n                <TableCell>Company</TableCell>\r\n                <TableCell>Status</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {userList\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((user, index) => (\r\n                  <TableRow key={shortid.generate()}>\r\n                    <TableCell className=\"px-0\" align=\"left\">\r\n                      {user.firstName}\r\n                    </TableCell>\r\n                    <TableCell className=\"px-0\">{user.lastName}</TableCell>\r\n                    <TableCell className=\"px-0\" align=\"left\">\r\n                      {user.birthDate}\r\n                    </TableCell>\r\n                    \r\n                    <TableCell className=\"px-0\" align=\"left\">\r\n                      {user.company}\r\n                    </TableCell>\r\n                    <TableCell className=\"px-0\">\r\n                      {user.isActive ? (\r\n                        <small className=\"border-radius-4 bg-primary text-white px-8 py-2 \">\r\n                          active\r\n                        </small>\r\n                      ) : (\r\n                        <small className=\"border-radius-4 bg-light-gray px-8 py-2 \">\r\n                          inactive\r\n                        </small>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell className=\"px-0 border-none\">\r\n                      <IconButton\r\n                        onClick={() =>\r\n                          this.setState({\r\n                            uid: user.id,\r\n                            shouldOpenEditorDialog: true\r\n                          })\r\n                        }\r\n                      >\r\n                        <Icon color=\"primary\">edit</Icon>\r\n                      </IconButton>\r\n                      <IconButton onClick={() => this.handleDeleteUser(user)}>\r\n                        <Icon color=\"error\">delete</Icon>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n\r\n          <TablePagination\r\n            className=\"px-16\"\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={userList.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            backIconButtonProps={{\r\n              \"aria-label\": \"Previous Page\"\r\n            }}\r\n            nextIconButtonProps={{\r\n              \"aria-label\": \"Next Page\"\r\n            }}\r\n            onChangePage={this.handleChangePage}\r\n            onChangeRowsPerPage={this.setRowsPerPage}\r\n          />\r\n\r\n          {shouldOpenEditorDialog && (\r\n            <MemberEditorDialog\r\n              handleClose={this.handleDialogClose}\r\n              open={shouldOpenEditorDialog}\r\n              uid={this.state.uid}\r\n            />\r\n          )}\r\n          {shouldOpenConfirmationDialog && (\r\n            <ConfirmationDialog\r\n              open={shouldOpenConfirmationDialog}\r\n              onConfirmDialogClose={this.handleDialogClose}\r\n              onYesClick={this.handleConfirmationResponse}\r\n              text=\"Are you sure to delete?\"\r\n            />\r\n          )}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default DepartmentTable;\r\n"]},"metadata":{},"sourceType":"module"}