{"ast":null,"code":"import { FOCUSABLE_ELEMENTS, KEYBOARD_NAV_DATA_BODY, KEYBOARD_NAV_DATA_HEADER, KEYBOARD_NAV_DATA_ID, KEYBOARD_NAV_DATA_LEVEL, KEYBOARD_NAV_DATA_SCOPE, KEYBOARD_NAV_FILTER_COL_SUFFIX, TABBABLE_ELEMENTS } from './constants';\n/**\n * @hidden\n */\n\nexport var generateNavigatableId = function generateNavigatableId(navigationId, idPrefix, type) {\n  if (type === void 0) {\n    type = 'cell';\n  }\n\n  return idPrefix + \"_\" + navigationId + \"_\" + type;\n};\n/**\n * @hidden\n */\n\nexport var getNavigatableLevel = function getNavigatableLevel(element) {\n  if (!element) {\n    return;\n  }\n\n  return parseInt(element.getAttribute(KEYBOARD_NAV_DATA_LEVEL) || '', 10);\n};\n/**\n * @hidden\n */\n\nexport var getNavigatableId = function getNavigatableId(element) {\n  if (!element) {\n    return;\n  }\n\n  var dataId = element.getAttribute(KEYBOARD_NAV_DATA_ID);\n  return dataId ? dataId : undefined;\n};\n/**\n * @hidden\n */\n\nexport var isNavigatable = function isNavigatable(element) {\n  if (!element) {\n    return false;\n  }\n\n  var dataId = element.getAttribute(KEYBOARD_NAV_DATA_ID);\n  return Boolean(dataId);\n};\n/**\n * @hidden\n */\n\nexport var getNavigatableElement = function getNavigatableElement(scope, options) {\n  if (options === void 0) {\n    options = {\n      level: 0\n    };\n  }\n\n  return scope.querySelector(\"[\" + KEYBOARD_NAV_DATA_LEVEL + \"='\" + options.level + \"']\");\n};\n/**\n * @hidden\n */\n\nexport var getClosestNavigatableElement = function getClosestNavigatableElement(target) {\n  return target.parentElement && target.parentElement.closest(\"[\" + KEYBOARD_NAV_DATA_LEVEL + \"]\");\n};\n/**\n * @hidden\n */\n\nexport var getActiveElement = function getActiveElement(scope, activeId) {\n  return scope.querySelector(\"[\" + KEYBOARD_NAV_DATA_ID + \"='\" + activeId + \"']\");\n};\n/**\n * @hidden\n */\n\nexport var getClosestScope = function getClosestScope(target) {\n  return target.parentElement && target.parentElement.closest(\"[\" + KEYBOARD_NAV_DATA_SCOPE + \"]\");\n};\n/**\n * @hidden\n */\n\nexport var getHeaderElement = function getHeaderElement(scope) {\n  return scope.querySelector(\"[\" + KEYBOARD_NAV_DATA_HEADER + \"]\");\n};\n/**\n * @hidden\n */\n\nexport var getBodyElement = function getBodyElement(scope) {\n  return scope.querySelector(\"[\" + KEYBOARD_NAV_DATA_BODY + \"]\");\n};\n/**\n * @hidden\n */\n\nexport var getFocusableElements = function getFocusableElements(scope, options) {\n  if (options === void 0) {\n    options = {\n      focusable: false\n    };\n  }\n\n  var selectors = options.focusable ? FOCUSABLE_ELEMENTS : TABBABLE_ELEMENTS;\n  return Array.from(scope.querySelectorAll(selectors.join(',')));\n};\n/**\n * @hidden\n */\n\nexport var getNavigatableElements = function getNavigatableElements(scope, options) {\n  if (options === void 0) {\n    options = {\n      level: 0\n    };\n  }\n\n  if (!scope) {\n    return [];\n  }\n\n  var selector = FOCUSABLE_ELEMENTS.map(function (el) {\n    return el + (\"[\" + KEYBOARD_NAV_DATA_LEVEL + \"='\" + options.level + \"']\");\n  }).join(',');\n  return Array.from(scope.querySelectorAll(selector));\n};\n/**\n * @hidden\n */\n\nexport var filterNavigatableElements = function filterNavigatableElements(options) {\n  if (options === void 0) {\n    options = {\n      level: 0\n    };\n  }\n\n  var selector = FOCUSABLE_ELEMENTS.map(function (sel) {\n    return sel + (\"[\" + KEYBOARD_NAV_DATA_LEVEL + \"='\" + options.level + \"']\");\n  }).join(',');\n  return function (element) {\n    return element.matches(selector);\n  };\n};\n/**\n * @hidden\n */\n\nexport var focusElement = function focusElement(options) {\n  var elementForFocus = options.elementForFocus,\n      event = options.event,\n      contextStateRef = options.contextStateRef,\n      prevElement = options.prevElement;\n\n  if (contextStateRef.current && elementForFocus && elementForFocus.focus) {\n    event.preventDefault();\n    elementForFocus.focus();\n\n    if (isNavigatable(elementForFocus)) {\n      elementForFocus.setAttribute('tabIndex', '0');\n      contextStateRef.current.activeId = getNavigatableId(elementForFocus);\n    }\n\n    if (prevElement && isNavigatable(prevElement)) {\n      prevElement.setAttribute('tabIndex', '-1');\n    }\n  }\n};\n/**\n * @hidden\n */\n\nexport var getIdPrefix = function getIdPrefix(navigationStateRef) {\n  return navigationStateRef.current ? navigationStateRef.current.idPrefix : '';\n};\n/**\n * @hidden\n */\n\nexport var findNextIdByRowIndex = function findNextIdByRowIndex(initialRowIndex, cellIndex, elementId, matrix, isReverse) {\n  if (!elementId) {\n    return [];\n  }\n\n  var currentRowIndex = initialRowIndex + (isReverse ? -1 : 1);\n\n  while (currentRowIndex >= 0 && currentRowIndex < matrix.length) {\n    var currentId = matrix[currentRowIndex][cellIndex];\n\n    if (currentId !== elementId) {\n      return [currentId, [currentRowIndex, cellIndex]];\n    }\n\n    currentRowIndex = currentRowIndex + (isReverse ? -1 : 1);\n  }\n\n  return [];\n};\n/**\n * @hidden\n */\n\nexport var findNextIdByCellIndex = function findNextIdByCellIndex(rowIndex, initialCellIndex, elementId, matrix, isReverse) {\n  if (!elementId) {\n    return [];\n  }\n\n  var currentCellIndex = initialCellIndex + (isReverse ? -1 : 1);\n\n  while (currentCellIndex >= 0 && currentCellIndex < matrix[rowIndex].length) {\n    var currentId = matrix[rowIndex][currentCellIndex];\n\n    if (currentId !== elementId) {\n      return [currentId, [rowIndex, currentCellIndex]];\n    }\n\n    currentCellIndex = currentCellIndex + (isReverse ? -1 : 1);\n  }\n\n  return [];\n};\n/**\n * @hidden\n */\n\nexport var findId = function findId(navigationMatrix, cellId) {\n  if (!cellId) {\n    return;\n  }\n\n  for (var rowIndex = 0; rowIndex < navigationMatrix.length; rowIndex++) {\n    for (var cellIndex = 0; cellIndex < navigationMatrix[rowIndex].length; cellIndex++) {\n      if (navigationMatrix[rowIndex][cellIndex] === cellId) {\n        return [rowIndex, cellIndex];\n      }\n    }\n  }\n};\n/**\n * @hidden\n */\n\nexport var getNextNavigationIndex = function getNextNavigationIndex(navigationStateRef) {\n  return navigationStateRef.current ? navigationStateRef.current.navigationMatrix.length : 0;\n};\n/**\n * @hidden\n */\n\nexport var getFilterColumnId = function getFilterColumnId(columnId) {\n  return columnId ? \"\" + columnId + KEYBOARD_NAV_FILTER_COL_SUFFIX : '';\n};\n/**\n * @hidden\n */\n\nexport var tableKeyboardNavigationTools = {\n  generateNavigatableId: generateNavigatableId,\n  getNavigatableId: getNavigatableId,\n  getNavigatableLevel: getNavigatableLevel,\n  getNavigatableElement: getNavigatableElement,\n  getClosestNavigatableElement: getClosestNavigatableElement,\n  getActiveElement: getActiveElement,\n  getClosestScope: getClosestScope,\n  getHeaderElement: getHeaderElement,\n  getBodyElement: getBodyElement,\n  getFocusableElements: getFocusableElements,\n  getNavigatableElements: getNavigatableElements,\n  filterNavigatableElements: filterNavigatableElements,\n  focusElement: focusElement,\n  getIdPrefix: getIdPrefix,\n  isNavigatable: isNavigatable,\n  findNextIdByRowIndex: findNextIdByRowIndex,\n  findNextIdByCellIndex: findNextIdByCellIndex,\n  findId: findId,\n  getNextNavigationIndex: getNextNavigationIndex,\n  getFilterColumnId: getFilterColumnId\n};","map":null,"metadata":{},"sourceType":"module"}