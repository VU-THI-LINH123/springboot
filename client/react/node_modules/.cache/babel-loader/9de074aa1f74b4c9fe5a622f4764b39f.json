{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { isPresent, isNotNullOrEmptyString } from './utils';\nimport { serializeFilter } from './odata-filtering.operators';\nimport { ifElse, constant } from './funcs';\n\nvar serializeSort = function serializeSort(orderby) {\n  var str = orderby.filter(function (sort) {\n    return isPresent(sort.dir);\n  }).map(function (sort) {\n    var order = sort.field.replace(/\\./g, \"/\");\n    return sort.dir === \"desc\" ? order + \" desc\" : order;\n  }).join(\",\");\n  return str ? \"$orderby=\" + str : str;\n};\n\nvar emptyString = constant('');\n\nvar concat = function concat(a) {\n  return function (b) {\n    return a + b;\n  };\n};\n\nvar serializeKey = function serializeKey(strings, val) {\n  return ifElse(isPresent, concat(strings[0]), emptyString)(val);\n};\n\nvar rules = function rules(settings, state) {\n  return function (key) {\n    return {\n      \"filter\": serializeFilter(state.filter || {}, settings),\n      \"skip\": serializeKey(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject([\"$skip=\", \"\"], [\"$skip=\", \"\"])), state.skip),\n      \"sort\": serializeSort(state.sort || []),\n      \"take\": serializeKey(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject([\"$top=\", \"\"], [\"$top=\", \"\"])), state.take)\n    }[key];\n  };\n}; // tslint:enable:max-line-length\n\n/**\n * Converts a [`State`]({% slug api_kendo-data-query_state %}) into an OData v4 compatible string.\n *\n * @param {State} state - The state that will be serialized.\n * @param {ODataSettings} settings - The settings that are used during the serialization.\n * @returns {string} - The serialized state.\n */\n\n\nexport var toODataString = function toODataString(state, settings) {\n  if (settings === void 0) {\n    settings = {};\n  }\n\n  return Object.keys(state).map(rules(settings, state)).filter(isNotNullOrEmptyString).join('&');\n};\nvar templateObject_1, templateObject_2;","map":null,"metadata":{},"sourceType":"module"}