{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { createFilterCell } from './FilterCell';\nimport { DropDownList } from '@progress/kendo-react-dropdowns';\nvar booleanOperator = 'eq';\nvar settings = {\n  emptyFilter: {\n    operator: booleanOperator,\n    value: ''\n  },\n  inputComponent: function inputComponent(_props) {\n    return null;\n  },\n  operatorComponent: function operatorComponent(props, cellProps) {\n    var _a = cellProps.filter,\n        filter = _a === void 0 ? [] : _a,\n        field = cellProps.field;\n    var current = filter.find(function (f) {\n      return f.field === field;\n    });\n    return React.createElement(DropDownList, __assign({}, props, {\n      value: props.data.find(function (x) {\n        return x.operator === (current ? current.value : '');\n      }),\n      onChange: function onChange(e) {\n        if (!cellProps.onFilterChange) {\n          return;\n        }\n\n        var value = e.target.value.operator;\n\n        if (value === '') {\n          if (current) {\n            cellProps.onFilterChange.call(undefined, {\n              filter: filter.filter(function (f) {\n                return f.field !== current.field;\n              }),\n              field: field,\n              syntheticEvent: e.syntheticEvent\n            });\n          }\n\n          return;\n        }\n\n        var filterResult = current ? filter.map(function (f) {\n          return f.field === field ? __assign({}, current, {\n            value: value\n          }) : f;\n        }) : filter.concat([{\n          value: value,\n          field: field,\n          operator: booleanOperator\n        }]);\n        cellProps.onFilterChange.call(undefined, {\n          filter: filterResult,\n          field: field,\n          syntheticEvent: e.syntheticEvent\n        });\n      }\n    }));\n  }\n};\n/**\n * @hidden\n */\n\nvar BooleanFilterCell =\n/** @class */\nfunction (_super) {\n  __extends(BooleanFilterCell, _super);\n\n  function BooleanFilterCell() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return BooleanFilterCell;\n}(createFilterCell(settings));\n\nexport { BooleanFilterCell };","map":null,"metadata":{},"sourceType":"module"}