{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { Draggable } from '@progress/kendo-react-common';\n/**\n * @hidden\n */\n\nvar ColumnDraggable =\n/** @class */\nfunction (_super) {\n  __extends(ColumnDraggable, _super);\n\n  function ColumnDraggable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * @hidden\n     */\n\n\n    _this.onPress = function (data) {\n      var element = _this.draggable && _this.draggable.element;\n\n      if (element && _this.props.pressHandler) {\n        _this.props.pressHandler(data.event, element);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onDrag = function (data) {\n      var element = _this.draggable && _this.draggable.element;\n\n      if (element && _this.props.dragHandler) {\n        _this.props.dragHandler(data.event, element);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onRelease = function (data) {\n      var element = _this.draggable && _this.draggable.element;\n\n      if (element && _this.props.releaseHandler) {\n        _this.props.releaseHandler(data.event);\n      }\n    };\n\n    return _this;\n  }\n\n  ColumnDraggable.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(Draggable, {\n      onPress: this.onPress,\n      onDrag: this.onDrag,\n      onRelease: this.onRelease,\n      ref: function ref(component) {\n        _this.draggable = component;\n      }\n    }, React.createElement(\"tr\", null, this.props.children));\n  };\n\n  return ColumnDraggable;\n}(React.PureComponent);\n\nexport { ColumnDraggable };","map":null,"metadata":{},"sourceType":"module"}