{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { useLocalization } from '@progress/kendo-react-intl';\nimport { DropDownList } from '@progress/kendo-react-dropdowns';\nimport { NumericTextBox, Checkbox } from '@progress/kendo-react-inputs';\nimport { DatePicker } from '@progress/kendo-react-dateinputs';\nimport { messages } from '../messages';\nimport { ColumnMenuOperators } from './ColumnMenuOperators';\n\nvar ColumnMenuFilter = function ColumnMenuFilter(props) {\n  var filter = props.filter,\n      onFilterChange = props.onFilterChange,\n      operators = props.operators,\n      initialFilter = props.initialFilter;\n  var operatorChange = React.useCallback(function (event) {\n    var prevFilter = filter;\n    var operator = event.target.value.operator;\n    var nextFilter = prevFilter ? __assign({}, prevFilter, {\n      operator: operator\n    }) : {\n      value: initialFilter.value,\n      operator: operator\n    };\n    onFilterChange.call(undefined, event.syntheticEvent, nextFilter, prevFilter);\n  }, [filter, onFilterChange, initialFilter]);\n  var inputChange = React.useCallback(function (event) {\n    var value = event.target.value;\n    var prevFilter = filter;\n    var nextFilter = prevFilter ? __assign({}, prevFilter, {\n      value: value\n    }) : {\n      value: value,\n      operator: operators[0].operator\n    };\n    onFilterChange.call(undefined, event, nextFilter, prevFilter);\n  }, [filter, onFilterChange, operators]);\n  var localization = useLocalization();\n  var data = operators.map(function (o) {\n    return __assign({}, o, {\n      text: localization.toLanguageString(o.text, messages[o.text])\n    });\n  });\n  return React.createElement(React.Fragment, null, React.createElement(DropDownList, {\n    value: data.find(function (item) {\n      return item.operator === filter.operator;\n    }) || null,\n    onChange: operatorChange,\n    data: data,\n    textField: \"text\"\n  }), React.createElement(props.input, {\n    value: filter.value,\n    onChange: inputChange\n  }));\n};\n\nexport var ColumnMenuBooleanFilter = function ColumnMenuBooleanFilter(props) {\n  var filter = props.filter,\n      onFilterChange = props.onFilterChange;\n  var inputChange = React.useCallback(function (event) {\n    return onFilterChange.call(undefined, event.syntheticEvent, __assign({}, filter, {\n      value: event.value\n    }), filter);\n  }, [filter, onFilterChange]);\n  var isTrue = ColumnMenuOperators.boolean[0].text;\n  return React.createElement(Checkbox, {\n    onChange: inputChange,\n    checked: filter.value,\n    label: useLocalization().toLanguageString(isTrue, messages[isTrue]),\n    labelPlacement: \"after\"\n  });\n};\nexport var ColumnMenuTextFilter = function ColumnMenuTextFilter(props) {\n  var input = React.useCallback(function (pr) {\n    return React.createElement(\"input\", __assign({}, pr, {\n      value: pr.value || '',\n      className: \"k-textbox\"\n    }));\n  }, []);\n  var operators = React.useRef(ColumnMenuOperators.text);\n  var initialFilter = React.useRef({\n    operator: '',\n    value: ''\n  });\n  return React.createElement(ColumnMenuFilter, __assign({\n    initialFilter: initialFilter.current,\n    input: input,\n    operators: props.operators || operators.current\n  }, props));\n};\nexport var ColumnMenuNumericFilter = function ColumnMenuNumericFilter(props) {\n  var input = React.useCallback(function (pr) {\n    return React.createElement(NumericTextBox, __assign({}, pr, {\n      value: pr.value || null\n    }));\n  }, []);\n  var operators = React.useRef(ColumnMenuOperators.numeric);\n  var initialFilter = React.useRef({\n    operator: '',\n    value: null\n  });\n  return React.createElement(ColumnMenuFilter, __assign({\n    initialFilter: initialFilter.current,\n    input: input,\n    operators: props.operators || operators.current\n  }, props));\n};\nexport var ColumnMenuDateFilter = function ColumnMenuDateFilter(props) {\n  var input = React.useCallback(function (pr) {\n    return React.createElement(DatePicker, __assign({}, pr, {\n      value: pr.value || null\n    }));\n  }, []);\n  var operators = React.useRef(ColumnMenuOperators.date);\n  var initialFilter = React.useRef({\n    operator: '',\n    value: null\n  });\n  return React.createElement(ColumnMenuFilter, __assign({\n    initialFilter: initialFilter.current,\n    input: input,\n    operators: props.operators || operators.current\n  }, props));\n};","map":null,"metadata":{},"sourceType":"module"}