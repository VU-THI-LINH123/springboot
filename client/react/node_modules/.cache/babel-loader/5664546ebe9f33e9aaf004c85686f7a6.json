{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\nvar dots = '...';\n/**\n * @hidden\n */\n\nvar PagerNumericButtons =\n/** @class */\nfunction (_super) {\n  __extends(PagerNumericButtons, _super);\n\n  function PagerNumericButtons() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.handlePageChange = function (e, page) {\n      e.preventDefault();\n\n      _this.props.pageChange(page, e);\n    };\n\n    _this.handleSelectPageChange = function (e) {\n      e.preventDefault();\n\n      _this.props.pageChange(e.target.value, e);\n    };\n\n    return _this;\n  }\n\n  PagerNumericButtons.prototype.render = function () {\n    var _this = this;\n\n    var prevDots = this.start > 1 && this.renderDots(this.start - 1);\n    var postDots = this.end < this.props.totalPages && this.renderDots(this.end + 1);\n    var prevOptionDots = this.start > 1 && this.renderOptionDots(this.start - 1);\n    var postOptionDots = this.end < this.props.totalPages && this.renderOptionDots(this.end + 1);\n    var buttons = [];\n\n    for (var idx = this.start; idx <= this.end; idx++) {\n      buttons.push(idx);\n    }\n\n    var numerics = buttons.map(function (page) {\n      return React.createElement(\"li\", {\n        key: page\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick(e) {\n          return _this.handlePageChange(e, page);\n        },\n        className: classNames('k-link', {\n          'k-state-selected': _this.props.currentPage === page\n        })\n      }, page));\n    });\n    var options = buttons.map(function (page) {\n      return React.createElement(\"option\", {\n        key: page,\n        className: classNames('k-link')\n      }, page);\n    });\n    return React.createElement(\"div\", {\n      className: \"k-pager-numbers-wrap\"\n    }, React.createElement(\"select\", {\n      className: \"k-dropdown\",\n      value: this.props.currentPage,\n      onChange: function onChange(e) {\n        return _this.handleSelectPageChange(e);\n      }\n    }, prevOptionDots, options, postOptionDots), React.createElement(\"ul\", {\n      className: \"k-pager-numbers k-reset\"\n    }, prevDots, numerics, postDots));\n  };\n\n  PagerNumericButtons.prototype.renderDots = function (page) {\n    var _this = this;\n\n    return React.createElement(\"li\", null, React.createElement(\"a\", {\n      className: \"k-link\",\n      onClick: function onClick(e) {\n        return _this.handlePageChange(e, page);\n      },\n      href: \"#\"\n    }, dots));\n  };\n\n  PagerNumericButtons.prototype.renderOptionDots = function (page) {\n    return React.createElement(\"option\", {\n      className: \"k-link\",\n      value: page\n    }, dots);\n  };\n\n  Object.defineProperty(PagerNumericButtons.prototype, \"end\", {\n    get: function get() {\n      return Math.min(this.start + this.props.buttonCount - 1, this.props.totalPages);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PagerNumericButtons.prototype, \"start\", {\n    get: function get() {\n      var page = this.props.currentPage;\n      var buttonCount = this.props.buttonCount;\n\n      if (page > buttonCount) {\n        var reminder = page % buttonCount;\n        return reminder === 0 ? page - buttonCount + 1 : page - reminder + 1;\n      }\n\n      return 1;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PagerNumericButtons;\n}(React.Component);\n\nexport { PagerNumericButtons };","map":null,"metadata":{},"sourceType":"module"}