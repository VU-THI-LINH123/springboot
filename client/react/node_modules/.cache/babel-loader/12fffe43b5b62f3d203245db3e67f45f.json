{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { classNames, getTabIndex } from '@progress/kendo-react-common';\n/**\n * Represents the [KendoReact FloatingActionButtonItem component]({% slug overview_floatingactionbutton %}).\n *\n * @example\n * ```jsx\n *\n * const App = () => {\n *   return (\n *       <FloatingActionButton items={[{icon: 'pencil', text: 'Edit'}, {icon: 'close', text: 'Remove'}] icon: 'plus'} />\n *   );\n * };\n *    ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\n\nexport var FloatingActionButtonItem = React.forwardRef(function (props, ref) {\n  var className = props.className,\n      disabled = props.disabled,\n      text = props.text,\n      icon = props.icon,\n      style = props.style,\n      id = props.id,\n      focused = props.focused,\n      tabIndex = props.tabIndex,\n      index = props.index,\n      dataItem = props.dataItem,\n      item = props.item,\n      onDown = props.onDown,\n      onClick = props.onClick,\n      others = __rest(props, [\"className\", \"disabled\", \"text\", \"icon\", \"style\", \"id\", \"focused\", \"tabIndex\", \"index\", \"dataItem\", \"item\", \"onDown\", \"onClick\"]);\n\n  var elementRef = React.useRef(null);\n  var focusElement = React.useCallback(function () {\n    if (elementRef.current) {\n      elementRef.current.focus();\n    }\n  }, []);\n  var getImperativeHandle = React.useCallback(function () {\n    return {\n      element: elementRef.current,\n      focus: focusElement\n    };\n  }, [focusElement]);\n  React.useImperativeHandle(ref, getImperativeHandle);\n  var handleClick = React.useCallback(function (event) {\n    if (onClick && index !== undefined && !disabled) {\n      onClick(event, index);\n    }\n  }, [onClick, index]);\n  var itemClassNames = React.useMemo(function () {\n    return classNames('k-fab-item', {\n      'k-state-focus': focused,\n      'k-state-disabled': disabled\n    }, className);\n  }, [className, disabled, focused]);\n  var ItemComp = item;\n  return React.createElement(\"li\", __assign({\n    ref: elementRef,\n    id: id,\n    className: itemClassNames,\n    style: style,\n    role: 'menuitem',\n    tabIndex: getTabIndex(tabIndex, disabled),\n    \"aria-disabled\": disabled,\n    \"aria-label\": (text || '') + \" floatingactionbutton item\",\n    onClick: handleClick,\n    onMouseDown: onDown,\n    onPointerDown: onDown\n  }, others), ItemComp ? React.createElement(ItemComp, {\n    itemIndex: index,\n    item: dataItem\n  }) : React.createElement(React.Fragment, null, text && React.createElement(\"span\", {\n    className: \"k-fab-item-text\"\n  }, text), icon && React.createElement(\"span\", {\n    className: classNames(\"k-fab-item-icon k-icon k-i-\" + icon)\n  })));\n});\nFloatingActionButtonItem.propTypes = {\n  className: PropTypes.string,\n  style: PropTypes.object,\n  children: PropTypes.any,\n  disabled: PropTypes.bool,\n  focused: PropTypes.bool,\n  index: PropTypes.number,\n  icon: PropTypes.string,\n  text: PropTypes.string,\n  tabIndex: PropTypes.number,\n  customProp: PropTypes.any\n};\nFloatingActionButtonItem.displayName = 'KendoFloatingActionButtonItem';","map":null,"metadata":{},"sourceType":"module"}